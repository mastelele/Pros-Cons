{"version":3,"sources":["components/styled/Inputs.js","components/styled/ListItems.js","components/ListItem.js","components/ItemsList.js","components/Cons.js","components/Pros.js","components/ProsCons.js","App.js","reducers/main.js","reducers/index.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["Input","styled","input","fontWeight","fontSize","OlItem","li","ListItem","_ref","value","onChange","react_default","a","createElement","ItemsList","state","items","key","uuid","onChangeHandler","e","index","target","_this","newItems","Object","toConsumableArray","updatedItem","length","push","splice","concat","setState","_this2","this","OrderedList","map","item","components_ListItem","Component","connect","ol","listStylePosition","overflowY","padding","Cons","Wrapper","Header","components_ItemsList","div","height","flex","display","flexDirection","justifyContent","borderBottom","Pros","Pros_Wrapper","Pros_Header","borderRight","ProsCons","ProsCons_Wrapper","ProsCons_Header","ProsConsWrapper","components_Pros","components_Cons","width","backgroundColor","color","textAlign","App","AppContainer","components_ProsCons","defaultState","main","arguments","undefined","action","produce","draft","type","combineReducers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5b124007.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Input = styled.input({\r\n  fontWeight: 400,\r\n  fontSize: '1.5rem',\r\n})\r\n\r\nexport const InputSM = styled(Input)({\r\n  fontSize: '1rem',\r\n})\r\n","import styled from '@emotion/styled'\r\n\r\nexport const OlItem = styled.li({\r\n  fontSize: '1.5rem',\r\n})\r\n\r\nexport const OlItemSM = styled(OlItem)({\r\n  fontSize: '1rem',\r\n})\r\n","import React from 'react'\nimport { func, string } from 'prop-types'\nimport { Input } from './styled/Inputs'\nimport { OlItem } from './styled/ListItems'\n\nconst ListItem = ({ value, onChange }) => {\n  return (\n    <OlItem>\n      <Input value={value} onChange={onChange}></Input>\n    </OlItem>\n  )\n}\n\nListItem.propTypes = {\n  value: string.isRequired,\n  onChange: func.isRequired,\n}\n\nexport default ListItem\n","import React, { Component } from 'react'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport uuid from 'uuid/v4'\nimport ListItem from './ListItem'\n\nclass ItemsList extends Component {\n  state = {\n    items: [{ value: '', key: uuid() }],\n  }\n\n  onChangeHandler = (e, index) => {\n    const { value } = e.target\n    const { items } = this.state\n    const newItems = [...items]\n    const updatedItem = newItems[index]\n    if (index === newItems.length - 1) {\n      newItems.push({\n        value: '',\n        key: uuid(),\n      })\n    } else if (!value) {\n      newItems.splice(index, 1)\n    }\n    updatedItem.value = `${value}`\n    this.setState({ items: [...newItems] })\n  }\n\n  render() {\n    const { items } = this.state\n    return (\n      <OrderedList>\n        {items.map((item, index) => (\n          <ListItem\n            key={item.key}\n            value={item.value}\n            onChange={e => {\n              this.onChangeHandler(e, index)\n            }}\n          ></ListItem>\n        ))}\n      </OrderedList>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {}\n\nItemsList.propTypes = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsList)\n\nconst OrderedList = styled.ol({\n  listStylePosition: 'inside',\n  overflowY: 'auto',\n  padding: '10px 20px',\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport ItemsList from './ItemsList'\n\nconst Cons = () => {\n  return (\n    <Wrapper>\n      <Header>Cons</Header>\n      <ItemsList></ItemsList>\n    </Wrapper>\n  )\n}\nexport default Cons\n\nconst Wrapper = styled.div({\n  height: '100%',\n  flex: '1',\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nconst Header = styled.div({\n  fontSize: '1.5rem',\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '10px 0',\n  borderBottom: '1px solid',\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport ItemsList from './ItemsList'\n\nconst Pros = () => {\n  return (\n    <Wrapper>\n      <Header>Pros</Header>\n      <ItemsList></ItemsList>\n    </Wrapper>\n  )\n}\n\nexport default Pros\n\nconst Wrapper = styled.div({\n  height: '100%',\n  flex: '1',\n  display: 'flex',\n  flexDirection: 'column',\n  borderRight: '1px solid',\n})\n\nconst Header = styled.div({\n  fontSize: '1.5rem',\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '10px 0',\n  borderBottom: '1px solid',\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Cons from './Cons'\nimport Pros from './Pros'\n\nconst ProsCons = () => {\n  return (\n    <Wrapper>\n      <Header>Should I eat McDonalds?</Header>\n      <ProsConsWrapper>\n        <Pros></Pros>\n        <Cons></Cons>\n      </ProsConsWrapper>\n    </Wrapper>\n  )\n}\n\nexport default ProsCons\n\nconst Wrapper = styled.div({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nconst Header = styled.div({\n  backgroundColor: '#aaaaaa',\n  fontSize: '2rem',\n  color: '#ffffff',\n  textAlign: 'center',\n  padding: '15px 0',\n})\n\nconst ProsConsWrapper = styled.div({\n  display: 'flex',\n  height: '100%',\n})\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport ProsCons from './components/ProsCons'\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppContainer>\r\n      <ProsCons></ProsCons>\r\n    </AppContainer>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nconst AppContainer = styled.div({\r\n  height: '100vh',\r\n  width: '100vw',\r\n  padding: '10vh 20vw',\r\n  display: 'flex',\r\n})\r\n","import produce from 'immer'\r\nimport * as types from '../actions/actionTypes'\r\n\r\nconst defaultState = {}\r\n\r\nconst main = (state = defaultState, action) =>\r\n  produce(state, draft => {\r\n    switch (action.type) {\r\n      default:\r\n        break\r\n    }\r\n  })\r\n\r\nexport default main\r\n","import { combineReducers } from 'redux'\r\nimport main from './main'\r\n\r\nexport default combineReducers({\r\n  main,\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport configureStore from './store/configureStore'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst store = configureStore()\r\nconst renderApp = () =>\r\n  render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  )\r\n\r\nserviceWorker.register()\r\n\r\nrenderApp()\r\n","import thunkMiddleware from 'redux-thunk'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from '../reducers'\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunkMiddleware),\r\n    initialState,\r\n  )\r\n\r\n  // HotReload - resets state\r\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('reducers', () => {\r\n      store.replaceReducer(rootReducer)\r\n    })\r\n  }\r\n  return store\r\n}\r\n"],"sourceRoot":""}